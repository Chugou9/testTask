
function App() {
  return (
    <div>
      <Table />
    </div>
  );
}



class Clock extends React.Component {

  constructor(props) {
    super(props);
    this.state = {date: new Date()};
  }

  componentDidMount() {
    this.timerID = setInterval(
      () => this.tick(), 1000
    );
  }

  componentWillUnmount() {
    clearInterval(this.timerID);
  }

  tick() {
    this.setState({
      date: new Date()
    });
  }
  render() {
    return (
      <div>
        <h1>Hello, world!</h1>
        <App />

        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>
      </div>
    );
  }
}

map( (item) => (<td>{item}</td>))

// const headTableFields = {
//   userName: "User name",
//   birthDay: "Date of Birth",
//   gender: "Gender"
// }
// const userTableFields = [
//   {   userName: "Вася", 
//       birthDay: "12.03.98",
//       gender: "male"},
//     {
//       userName: "ХулиО", 
//       birthDay: "12.03.92",
//       gender: "male"
//     },
//     {
//       userName: "Грека", 
//       birthDay: "02.03.82",
//       gender: "male"
//     },
//     {
//       userName: "Маша", 
//       birthDay: "12.12.92",
//       gender: "female"
//     },
//     {
//       userName: "Анастасия", 
//       birthDay: "04.06.99",
//       gender: "female"
//     },
//     {
//       userName: "Андрей", 
//       birthDay: "12.03.92",
//       gender: "male"
//     }
// ];
// function String(props) {
//   return <th className="string">{this.props.value}</th>
// }
// class Row extends React.Component {
//  render () {
//    return (
//   <tbody>
//     {
//       this.props.obj.map( (item) => (
//       <tr>
//         <td>{item.userName}</td>
//         <td>{item.birthDay}</td>
//         <td>{item.gender}</td>
//       </tr>)
//     )  
//     }
//   </tbody>
//    );
//   }
// }
// class RowExtended extends React.Component {
//   render () {
//     return (
//    <tbody>     
//       {
//         this.props.arr.map( (object) => 
//           ( <tr>{Object.keys(object).map( (i) => 
//             (<td>{object[i]}</td>) ) }</tr>) )
//       }       
//    </tbody>
//     );
//    }
//  }
// class TableHead extends React.Component {
//   render() {
//     return (
//       <thead>  
//         <tr>      
//           <td>{headTableFields.userName}</td>
//           <td>{headTableFields.birthDay}</td>
//           <td>{headTableFields.gender}</td>      
//         </tr>
//       </thead>    
//     );
//   }
// }
// function Table() {
//   return (
//   <table id="userBirthdays">
//     <h1>Hello, World!</h1>
//     <RowExtended arr={userTableFields} />

//   </table>
//   );
// }

// // class Counter extends React.Component {
// //   constructor(props) {
// //     super(props);
// //     this.state = {counter: 1};
// //   }
// //   handleClick()  {
// //     this.setState( (prevState) => ({counter: prevState.counter + 1}));
// //   }
// //   render() {
// //     return (
// //       <div>
// //         <button onClick={this.handleClick.bind(this)} />
// //         <h2>{this.state.counter}</h2>
// //       </div>
// //     );
// //   }
// // }

// function FormaDate(props) {
//   return (<code>{props.date.toLocaleTimeString()}</code>);
// }

// function tick() {
//   const time = (
//     <div>
//       <h1>Hello!</h1>
//       <h2>The time is {new Date().toLocaleTimeString()}.</h2>
//       {welcomeSara}
//     </div>
//   );
//   ReactDOM.render(
//     time,
//     document.getElementById("root")
//   );
// }

// function Welcome(props) {
//   return <h1>Hello, {props.name}</h1>
// }

// class Clock extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {date: new Date()};
//   }

//   componentDidMount() {
//     this.timerID = setInterval(
//       () => this.tick(), 1000);
//   }

//   componentWillUnmount() {
//     clearInterval(this.timerID);
//   }

//   tick() {
//     this.setState({ date: new Date() });
//   }
//   render() {
//     return (
//       <div>
//         <h1>Hello</h1>
//         <h2> It is <FormaDate date={this.state.date} />.</h2>
//       </div>
//     );
//   }
// }


// // function ActionLink() {
// //   function handleClick(e) {
// //     e.preventDefault();
// //     console.log("The link was clicked.");
// //   }

// //   return (
// //     <a href="#" onClick={handleClick}>
// //     Click me
// //     </a>
// //   );
// // }

// class Toggle extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {isToggleOn: true};
    
//     this.handleClick = this.handleClick.bind(this);
//   }

//   handleClick() {
//     this.setState(prevState => ({
//       isToggleOn: !prevState.isToggleOn
//     }));
    
//   }

//   render() {
//     return (
//       <div>
//         <Clock />
//         <button onClick = {this.handleClick}>
//           {this.state.isToggleOn ? "ON" : "OFF"}
//         </button>
//       </div>
//     );
//   }
// }

// function UserGreeting(props) {
//   return <h1>Welcome back!</h1>
// }

// function GuestGreeting(props) {
//   return <h1>Please sign up.</h1>;
// }

// function Greeting(props) {
//   const isLoggedIn = props.isLoggedIn;
//   if (isLoggedIn) {
//     return <UserGreeting />
//   }
//   return <GuestGreeting />
// }

// function LoginButton(props) {
//   return (
//     <button onClick={props.onClick}>
//       Login
//     </button>
//   );
// }

// function LogoutButton(props) {
//   return (
//     <button onClick={props.onClick}>
//       Logout
//     </button>
//   );
// }

// class LoginControl extends React.Component {
//   constructor(props) {
//     super(props);
//     this.handleLoginClick = this.handleLoginClick.bind(this);
//     this.handleLogoutClick = this.handleLogoutClick.bind(this);
//     this.state = {isLoggedIn: false};
//   }

//   handleLoginClick() {
//     this.setState({isLoggedIn: true});
//   }

//   handleLogoutClick() {
//     this.setState({isLoggedIn: false});
//   }

//   render() {
//     const isLoggedIn = this.state.isLoggedIn;

//     let button = null;
//     if (isLoggedIn) {
//       button = <LogoutButton onClick={this.handleLogoutClick} />;
//     } else {
//       button = <LoginButton onClick={this.handleLoginClick} />;
//     }

//     return (
//       <div>
//         <Greeting isLoggedIn={isLoggedIn} />
//         {button}
//       </div>
//     );
//   }
// }

// function Mailbox(props) {
//   const unreadMessages = props.unreadMessages;
//   return(
//     <div>
//       <h1>Hello!</h1>
//       {unreadMessages.length > 0 &&
//         <h2>
//           You have {unreadMessages.length} unread messages.
//         </h2>
//       }
//     </div>
//   );
// }

// const messages = ["React", "Re: REact", "Re:Re: React"];

// function WarningBanner(props) {
//   if (!props.warn) {
//     return null;
//   }

//   return (
//     <div className="warning">
//       Warning
//     </div>
//   );
// }

// function ListItem(props) {
//   return <li>{props.value}</li>;
// }

// function NumberList(props) {
//   const numbers = props.numbers;
//   const listItems = numbers.map( (number, index) => (
//     <ListItem key={number.toString()}
//       value={number} />
//   ) );
//   return (
//     <ul>{listItems}</ul>
//   );
// }
// const numbers = [1,2,3,4,5,6];

// function Blog(props) {
//   const sidebar = (
//     <ul>
//       {props.posts.map((post) =>
//         <li key={post.id}>
//           {post.title}
//         </li>
//       )}
//     </ul>
//   );
//   const content = props.posts.map( (post) =>
//     <div key={post.id}>
//       <h3>{post.title}</h3>
//       <p>{post.content}</p>
//     </div>
//   );
//   return (
//     <div>
//       {sidebar}
//       <hr />
//       {content}
//     </div>
//   );
// }

// const post = [
//   {id: 1, title: "Hello world!", content: "Welcome to Russia"},
//   {id: 2, title: "Installation", content: "You can install react."}
// ];
// class Page extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {showWarning: true}
//     this.handleToggleClick = this.handleToggleClick.bind(this);
//   }

//   handleToggleClick() {
//     this.setState( prevState => ({
//       showWarning: !prevState.showWarning
//     }));
//   }
  
//   render() {
    
//     const listItems = numbers.map( num => (<li>{num}</li>) );
//     return (
//       <div>
//         <WarningBanner warn={this.state.showWarning} />
//         <NumberList numbers={numbers} />
//         <Blog posts={post} />
//         <input type="text" value="Hello!" />
//         <button onClick={this.handleToggleClick}>
//           {this.state.showWarning ? "Hide" : "Show"}
//         </button>
//       </div>
//     );
//   }
// }

// class Form extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {value: ""};
//     this.handleChange = this.handleChange.bind(this);
//     this.handleSubmit = this.handleSubmit.bind(this);
//   }

//   handleChange(event) {
//     // this.setState({value: event.target.value.slice(0,140)});
//   }

//   handleSubmit(event) {
//     // if (this.state.value === "") {
//     //   alert("Пуфффто");
//     // } else {
//     //   alert("Text field value is: " + this.state.value);
//     // }
//     alert("Text field value is: " + this.state.value);
//   }

//   render() {
//     return (
//       <div>
//         {/* <input type="text"
//           placeholder="Hello!"
//           value={this.state.value}
//           onChange={this.handleChange} /> */}
//         <input
//         type="text"
//         placeholder="Hello!"
//         defaultValue="Lucky day!"
//         onChange={this.handleChange} />

//         {/* <select value="B">
//         <option value="A">Apple</option>
//         <option value="B">Banana</option>
//         <option value="C">Cranberry</option>
//       </select>
//      */}
//      {/* <label>
//           <input
//             type="radio"
//             name="choice"
//             value="A"
//             onChange={this.handleChange} />
//           Option A
//         </label>
//         <br />
//         <label>
//           <input
//             type="radio"
//             name="choice"
//             value="B"
//             onChange={this.handleChange}
//             defaultChecked={true} />
//           Option B
//         </label>
//         <br />
//         <label>
//           <input
//             type="radio"
//             name="choice"
//             value="C"
//             onChange={this.handleChange} /> 
//           Option C
//         </label> */}
        
//         <button onClick={this.handleSubmit}>
//           Submit
//         </button>
        
//       </div>
//     );
//   }
// }

// class FormD extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {value: {"A": false, "B": true, "C": false}};
//     this.handleChange = this.handleChange.bind(this);
//     this.handleSubmit = this.handleSubmit.bind(this);
//   }

//   handleChange(event) {
//     const value = event.target.value;

//     const checked = Object.assign({}, this.state.checked);
//     if (!checked[value]) {
//       checked[value] = true;
//     } else {
//       checked[value] = false;
//     }
//     this.setState({checked});
//   }

//   handleSubmit(event) {
//     alert("Boxes checked: " +
//   (this.state.checked.A ? "A " : "") +
//   (this.state.checked.B ? "B " : "") +
//   (this.state.checked.C ? "C" : ""));
//   }
//   render() {
//     return (
//       <div>
//         <label>
//           <input
//             type="checkbox"
//             value="A"
//             onChange={this.handleChange} />
//           Option A
//         </label>
//         <br />
//         <label>
//           <input
//             type="checkbox"
//             value="B"
//             onChange={this.handleChange}
//             defaultChecked={true} />
//             Option B
//         </label>
//         <br />
//         <label>
//           <input
//             type="checkbox"
//             value="C"
//             onChange={this.handleChange} />
//             Option C
//         </label>
//         <br />
//         <br />
//         <button onClick={this.handleSubmit}>
//           Submit
//         </button>
//       </div>
//     );
//   }
// }

const scaleNames = {
  c: "Celsius",
  f: "Fahrenheit"
};

class TemperatureInput extends React.Component {
  constructor(props) {
    super(props);
    this.handleChange = this.handleChange.bind(this);
  }

  handleChange(e) {
    this.props.onChange(e.target.value);
  }

  render() {
    const value = this.props.value;
    const scale = this.props.scale;
    return (
      <fieldset>
        <legend>Enter temperature in {scaleNames[scale]}:</legend>
        <input value={value}
          onChange={this.handleChange} />
      </fieldset>
    );
  }
}

function tryConvert(value, convert) {
  const input = parseFloat(value);
  if (Number.isNaN(input)) {
    return "";
  }
  const output = convert(input);
  const rounded = Math.round(output * 1000) / 1000;
  return rounded.toString();
}

function toCelsius(fahrenheit) {
  return (fahrenheit - 32) * 5 / 9;
}

function toFahrenheit(celsius) {
  return (celsius * 9 / 5) + 32;
}

function BoilingVerdict(props) {
  if (props.celsius >= 100) {
    return <p>The water would boil.</p>;
  }
  return <p>The water would not boil.</p>
}

class Calculator extends React.Component {
  constructor(props) {
    super(props);
    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);
    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);
    this.state = {value: "", scale: "c"};
  }

  handleCelsiusChange(value) {
    this.setState({scale: "c", value});
  }
  handleFahrenheitChange(value) {
    this.setState({scale: "f", value});
  }
  render() {
    const scale = this.state.scale;
    const value = this.state.value;
    const celsius = scale === "f" ? tryConvert(value, toCelsius) : value;
    const fahrenheit = scale === "c" ? tryConvert(value, toFahrenheit) : value;
    
    return (
      <div>
        <TemperatureInput 
          scale="c"
          value={celsius}
          onChange={this.handleCelsiusChange} />
        <TemperatureInput 
          scale="f"
          value={fahrenheit}
          onChange={this.handleFahrenheitChange} />
        <BoilingVerdict
          celsius={parseFloat(celsius)} />
      </div>
    );
  }
}
